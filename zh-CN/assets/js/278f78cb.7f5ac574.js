"use strict";(self.webpackChunknh_docs=self.webpackChunknh_docs||[]).push([[3687],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),f=o,d=m["".concat(c,".").concat(f)]||m[f]||s[f]||a;return n?r.createElement(d,l(l({ref:t},u),{},{components:n})):r.createElement(d,l({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},58215:function(e,t,n){var r=n(67294);t.Z=function(e){var t=e.children,n=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},55064:function(e,t,n){n.d(t,{Z:function(){return p}});var r=n(67294),o=n(79443);var a=function(){var e=(0,r.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=n(86010),i="tabItem_1uMI",c="tabItemActive_2DSg";var p=function(e){var t,n=e.lazy,o=e.block,p=e.defaultValue,u=e.values,s=e.groupId,m=e.className,f=r.Children.toArray(e.children),d=null!=u?u:f.map((function(e){return{value:e.props.value,label:e.props.label}})),h=null!=p?p:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value,v=a(),y=v.tabGroupChoices,g=v.setTabGroupChoices,b=(0,r.useState)(h),k=b[0],w=b[1],N=[];if(null!=s){var O=y[s];null!=O&&O!==k&&d.some((function(e){return e.value===O}))&&w(O)}var T=function(e){var t=e.currentTarget,n=N.indexOf(t),r=d[n].value;w(r),null!=s&&(g(s,r),setTimeout((function(){var e,n,r,o,a,l,i,p;(e=t.getBoundingClientRect(),n=e.top,r=e.left,o=e.bottom,a=e.right,l=window,i=l.innerHeight,p=l.innerWidth,n>=0&&a<=p&&o<=i&&r>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(c),setTimeout((function(){return t.classList.remove(c)}),2e3))}),150))},x=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=N.indexOf(e.target)+1;n=N[r]||N[0];break;case"ArrowLeft":var o=N.indexOf(e.target)-1;n=N[o]||N[N.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":o},m)},d.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,className:(0,l.Z)("tabs__item",i,{"tabs__item--active":k===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:x,onFocus:T,onClick:T},null!=n?n:t)}))),n?(0,r.cloneElement)(f.filter((function(e){return e.props.value===k}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==k})}))))}},79443:function(e,t,n){var r=(0,n(67294).createContext)(void 0);t.Z=r},86687:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return m},default:function(){return d}});var r=n(74034),o=n(79973),a=(n(67294),n(3905)),l=n(55064),i=n(58215),c=["components"],p={title:"helm"},u="Deploy Helm Charts",s={unversionedId:"config/config-deploy-helm",id:"config/config-deploy-helm",isDocsHomePage:!1,title:"helm",description:"To deploy Helm charts, you need to configure them within the application section of the .nocalhost/config.yaml.",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/config/config-deploy-helm.md",sourceDirName:"config",slug:"/config/config-deploy-helm",permalink:"/zh-CN/docs/config/config-deploy-helm",editUrl:"https://crowdin.com/project/nocalhost/zh-CN",tags:[],version:"current",lastUpdatedBy:"Garry",lastUpdatedAt:1629806685,formattedLastUpdatedAt:"2021/8/24",frontMatter:{title:"helm"}},m=[{value:"Example",id:"example",children:[{value:"Helm Version",id:"helm-version",children:[]},{value:"Overwrite Helm Values",id:"overwrite-helm-values",children:[]}]}],f={toc:m};function d(e){var t=e.components,n=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deploy-helm-charts"},"Deploy Helm Charts"),(0,a.kt)("p",null,"To deploy Helm charts, you need to configure them within the ",(0,a.kt)("inlineCode",{parentName:"p"},"application")," section of the ",(0,a.kt)("inlineCode",{parentName:"p"},".nocalhost/config.yaml"),"."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)(l.Z,{defaultValue:"helmLocal",values:[{label:"From Local Directory",value:"helmLocal"},{label:"From Git Repo",value:"helmGit"},{label:"From Helm Repo",value:"helmRepo"}],mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"helmLocal",mdxType:"TabItem"},(0,a.kt)("p",null,"Deploy Helm chart from local directory."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'\nconfigProperties:                       # struct    | required | Specify config properties\n    version: v2 \n\napplication:\n  name: bookinfo                        # string    | required | Application name\n  manifestType: helmLocal               # string    | required | Application k8s manifest type\n  resourcePath: ["charts/bookinfo"]     # string[]  | required | Set the application resource path\n  helmValues: []                        # struct    | optional | Overwrite helm values.yaml\n\n'))),(0,a.kt)(i.Z,{value:"helmGit",mdxType:"TabItem"},(0,a.kt)("p",null,"Deploy Helm chart from Git repository."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'\nconfigProperties:                       # struct    | required | Specify config properties\n    version: v2 \n\napplication:\n  name: bookinfo                        # string    | required | Application name                 \n  manifestType: helmGit                 # string    | required | Application k8s manifest type                           \n  resourcePath: ["charts/bookinfo"]     # string[]  | required | Set the application resource path\n  helmValues: []                        # struct    | optional | Overwrite helm values.yaml      \n\n'))),(0,a.kt)(i.Z,{value:"helmRepo",mdxType:"TabItem"},(0,a.kt)("p",null,"Deploy from Helm repository. This deployment method only supports with ",(0,a.kt)("strong",{parentName:"p"},"Nocalhost Server"),", refer to ",(0,a.kt)("a",{parentName:"p",href:"../server/manage-app"},"Manager applications with Nocalhost Server")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"\nconfigProperties:                       # struct    | required | Specify config properties\n    version: v2 \n\napplication:\n  name: bookinfo                        # string    | required | Application name\n  manifestType: helmRepo                # string    | required | Application k8s manifest type\n  helmValues: []                        # struct    | optional | Overwrite helm values.yaml\n  helmVersion:    0.0.1                 # string    | optional | Set default application version\n\n")))),(0,a.kt)("h3",{id:"helm-version"},"Helm Version"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"application[*].helmVersion")),(0,a.kt)("p",null,"Specify the application version in the Helm repository. This only corresponds to ",(0,a.kt)("inlineCode",{parentName:"p"},"manifestType: helmRepo")),(0,a.kt)("h4",{id:"example-setting-up-application-version"},"Example: Setting up application version"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"\nmanifestType:   helmRepo\nhelmVersion:    0.0.1       \n\n")),(0,a.kt)("h3",{id:"overwrite-helm-values"},"Overwrite Helm Values"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"application[*].helmValues")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"helmValues")," option expects an object with values that should be overriding the default values of this Helm chart."),(0,a.kt)("h4",{id:"example-using-values"},"Example: Using values"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"\nhelmValues:\n  - key: DOMAIN\n    value: ${DOMAIN:-www.coding.com}\n  - key: DEBUG\n    value: ${DEBUG:-true}\n\n")))}d.isMDXComponent=!0}}]);
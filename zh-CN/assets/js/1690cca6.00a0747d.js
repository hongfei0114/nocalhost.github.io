"use strict";(self.webpackChunknh_docs=self.webpackChunknh_docs||[]).push([[7978],{3905:function(e,t,n){n.d(t,{Zo:function(){return f},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},f=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,f=a(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,g=u["".concat(c,".").concat(d)]||u[d]||s[d]||l;return n?r.createElement(g,i(i({ref:t},f),{},{components:n})):r.createElement(g,i({ref:t},f))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,i=new Array(l);i[0]=u;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var p=2;p<l;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},48580:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return f},default:function(){return u}});var r=n(74034),o=n(79973),l=(n(67294),n(3905)),i=["components"],a={title:"nhctl profile"},c=void 0,p={unversionedId:"cli/cli-profile",id:"cli/cli-profile",isDocsHomePage:!1,title:"nhctl profile",description:"Profile Management",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/cli/cli-profile.md",sourceDirName:"cli",slug:"/cli/cli-profile",permalink:"/zh-CN/docs/cli/cli-profile",editUrl:"https://crowdin.com/project/nocalhost/zh-CN",tags:[],version:"current",lastUpdatedBy:"Garry",lastUpdatedAt:1629806685,formattedLastUpdatedAt:"2021/8/24",frontMatter:{title:"nhctl profile"},sidebar:"docs",previous:{title:"nhctl port-forward",permalink:"/zh-CN/docs/cli/cli-port-forward"},next:{title:"nhctl pvc",permalink:"/zh-CN/docs/cli/cli-pvc"}},f=[{value:"nhctl profile get",id:"nhctl-profile-get",children:[{value:"Usage",id:"usage",children:[]},{value:"Flags",id:"flags",children:[]}]},{value:"nhctl profile set",id:"nhctl-profile-set",children:[{value:"Usage",id:"usage-1",children:[]},{value:"Flags",id:"flags-1",children:[]}]}],s={toc:f};function u(e){var t=e.components,n=(0,o.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Profile Management"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Usage:\n  nhctl profile [command]\n\nAvailable Commands:\n  get         Get a config item of Profile\n  set         Set a config item of Profile\n")),(0,l.kt)("h2",{id:"nhctl-profile-get"},"nhctl profile get"),(0,l.kt)("p",null,"Get a config item of Profile"),(0,l.kt)("h3",{id:"usage"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"nhctl profile get [flags]\n")),(0,l.kt)("h3",{id:"flags"},"Flags"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'Flags:\n  -c, --container string    container name of pod\n  -d, --deployment string   k8s workload name\n  -h, --help                help for get\n  -k, --key string          key of dev config\n  -t, --type string         specify service type (default "deployment")\n\nGlobal Flags:\n      --debug               enable debug level log\n      --kubeconfig string   the path of the kubeconfig file\n  -n, --namespace string    kubernetes namespace\n')),(0,l.kt)("h2",{id:"nhctl-profile-set"},"nhctl profile set"),(0,l.kt)("p",null,"Set a config item of Profile"),(0,l.kt)("h3",{id:"usage-1"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"nhctl profile set [flags]\n")),(0,l.kt)("h3",{id:"flags-1"},"Flags"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'Flags:\n  -c, --container string    container name of pod\n  -d, --deployment string   k8s workload name\n  -h, --help                help for set\n  -k, --key string          key of dev config\n  -t, --type string         specify service type (default "deployment")\n  -v, --value string        value of dev config\n\nGlobal Flags:\n      --debug               enable debug level log\n      --kubeconfig string   the path of the kubeconfig file\n  -n, --namespace string    kubernetes namespace\n')))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknh_docs=self.webpackChunknh_docs||[]).push([[2492],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return h}});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),h=r,m=p["".concat(c,".").concat(h)]||p[h]||u[h]||i;return n?o.createElement(m,a(a({ref:t},d),{},{components:n})):o.createElement(m,a({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},13919:function(e,t,n){function o(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!o(e)}n.d(t,{b:function(){return o},Z:function(){return r}})},44996:function(e,t,n){n.d(t,{C:function(){return i},Z:function(){return a}});var o=n(52263),r=n(13919);function i(){var e=(0,o.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,o){var i=void 0===o?{}:o,a=i.forcePrependBaseUrl,l=void 0!==a&&a,c=i.absolute,s=void 0!==c&&c;if(!n)return n;if(n.startsWith("#"))return n;if((0,r.b)(n))return n;if(l)return t+n;var d=n.startsWith(t)?n:t+n.replace(/^\//,"");return s?e+d:d}(i,n,e,t)}}}function a(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},58215:function(e,t,n){var o=n(67294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return o.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},55064:function(e,t,n){n.d(t,{Z:function(){return s}});var o=n(67294),r=n(79443);var i=function(){var e=(0,o.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},a=n(86010),l="tabItem_1uMI",c="tabItemActive_2DSg";var s=function(e){var t,n=e.lazy,r=e.block,s=e.defaultValue,d=e.values,u=e.groupId,p=e.className,h=o.Children.toArray(e.children),m=null!=d?d:h.map((function(e){return{value:e.props.value,label:e.props.label}})),f=null!=s?s:null==(t=h.find((function(e){return e.props.default})))?void 0:t.props.value,v=i(),b=v.tabGroupChoices,g=v.setTabGroupChoices,k=(0,o.useState)(f),w=k[0],y=k[1],D=[];if(null!=u){var N=b[u];null!=N&&N!==w&&m.some((function(e){return e.value===N}))&&y(N)}var C=function(e){var t=e.currentTarget,n=D.indexOf(t),o=m[n].value;y(o),null!=u&&(g(u,o),setTimeout((function(){var e,n,o,r,i,a,l,s;(e=t.getBoundingClientRect(),n=e.top,o=e.left,r=e.bottom,i=e.right,a=window,l=a.innerHeight,s=a.innerWidth,n>=0&&i<=s&&r<=l&&o>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(c),setTimeout((function(){return t.classList.remove(c)}),2e3))}),150))},O=function(e){var t,n=null;switch(e.key){case"ArrowRight":var o=D.indexOf(e.target)+1;n=D[o]||D[0];break;case"ArrowLeft":var r=D.indexOf(e.target)-1;n=D[r]||D[D.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":r},p)},m.map((function(e){var t=e.value,n=e.label;return o.createElement("li",{role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,className:(0,a.Z)("tabs__item",l,{"tabs__item--active":w===t}),key:t,ref:function(e){return D.push(e)},onKeyDown:O,onFocus:C,onClick:C},null!=n?n:t)}))),n?(0,o.cloneElement)(h.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}},79443:function(e,t,n){var o=(0,n(67294).createContext)(void 0);t.Z=o},80201:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return d},default:function(){return p}});var o=n(74034),r=n(79973),i=(n(67294),n(3905)),a=(n(55064),n(58215),n(44996),["components"]),l={title:"DevMode(Duplicate)"},c=void 0,s={unversionedId:"guides/develop-service-dup-en",id:"guides/develop-service-dup-en",isDocsHomePage:!1,title:"DevMode(Duplicate)",description:"Why Duplicate DevMode",source:"@site/docs/guides/develop-service-dup-en.md",sourceDirName:"guides",slug:"/guides/develop-service-dup-en",permalink:"/docs/guides/develop-service-dup-en",editUrl:"https://github.com/nocalhost/nocalhost.github.io/tree/main/docs/guides/develop-service-dup-en.md",tags:[],version:"current",lastUpdatedBy:"name",lastUpdatedAt:1635416803,formattedLastUpdatedAt:"10/28/2021",frontMatter:{title:"DevMode(Duplicate)"},sidebar:"docs",previous:{title:"DevMode(Replace)",permalink:"/docs/guides/develop-service-replace"},next:{title:"Overview",permalink:"/docs/guides/debug/overview"}},d=[{value:"<strong>Why Duplicate DevMode</strong>",id:"why-duplicate-devmode",children:[]},{value:"How it works",id:"how-it-works",children:[]},{value:"How to use",id:"how-to-use",children:[]},{value:"FAQ",id:"faq",children:[]}],u={toc:d};function p(e){var t=e.components,l=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"why-duplicate-devmode"},(0,i.kt)("strong",{parentName:"h3"},"Why Duplicate DevMode")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Replace DevMode")," is the default development mode of Nocalhost. When developing a workload, the container image of the original workload will be replaced with the development image. As shown below:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image",src:n(22724).Z})),(0,i.kt)("p",null,"Using ",(0,i.kt)("inlineCode",{parentName:"p"},"Replace DevMode")," can well maintain the original call relations between services and transfer the traffic of other services in the cluster to the service being developed. However, there are also some shortcomings:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"1.")," It may destroy the original environment. The problems in the service being developed may cause problems to the whole environment.",(0,i.kt)("br",null),"\n",(0,i.kt)("strong",{parentName:"p"},"2.")," It may affect the normal use of the environment by other team members. Other members may only want to access the normal environment rather than the development environment.",(0,i.kt)("br",null),"\n",(0,i.kt)("strong",{parentName:"p"},"3.")," Multiple team members cannot develop the same service in the same K8s cluster at the same time."),(0,i.kt)("p",null,"To solve these problems, we can use ",(0,i.kt)("inlineCode",{parentName:"p"},"Duplicate DevMode"),"."),(0,i.kt)("h3",{id:"how-it-works"},"How it works"),(0,i.kt)("p",null,"In ",(0,i.kt)("inlineCode",{parentName:"p"},"Duplicate DevMode"),", instead of modifying the original workload, Nocalhost creates a duplicate of the original workload and further develops on it.  ",(0,i.kt)("inlineCode",{parentName:"p"},"Duplicate DevMode")," can be run on different devices to create the duplicate of the workload for development at the same time. Nocalhost will mark the device ID on the duplicate to identify which device is developing which duplicate. (Note that the device ID is automatically generated by Nocalhost and invisible to all users. Different devices will not have the same ID). Moreover, the duplicates will not affect each other. As shown below:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image",src:n(48601).Z})),(0,i.kt)("p",null,"The duplicate and the pod managed by it will use different labels from the original workload, so it will not receive any traffic that wants to access the original workload. The reason for doing so is that ",(0,i.kt)("inlineCode",{parentName:"p"},"Duplicate DevMode")," enables you to enter the development mode on many devices, which is different from  ",(0,i.kt)("inlineCode",{parentName:"p"},"Replace DevMode"),", so if both the duplicate and the original workload can receive the online traffic, we cannot know which duplicate is being used and the result of accessing the environment will be unpredictable."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"If the microservice application uses a third-party service discovery component (such as NACOS) instead of K8s Service, it is still possible that other services in the cluster access the duplicates created by ",(0,i.kt)("inlineCode",{parentName:"p"},"Duplicate Mode"),".  That also makes the result of accessing the environment unpredictable. In this case, you need to decide whether to register the service in the duplicate to the registration center.")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Duplicate Mode")," and  ",(0,i.kt)("inlineCode",{parentName:"p"},"Replace Mode")," can be run in different devices in the same time, but you can only choose one for development on one device."),(0,i.kt)("p",null,"When we need to access the service being developed in the duplicate, we can forward the local port to the target port of the remote service by the port forwarding function of Nocalhost. Then  the service can be accessed locally through ",(0,i.kt)("inlineCode",{parentName:"p"},"lcoalhost:[local port]"),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The created duplicate is invisible to users, so it will not be displayed in the workload list of VS Code and Jetbrains")),(0,i.kt)("h3",{id:"how-to-use"},"How to use"),(0,i.kt)("p",null,"Right-click ",(0,i.kt)("inlineCode",{parentName:"p"},"Start DevMode(duplicate)")," on the Jetbrains and VS Code extension to enter  ",(0,i.kt)("inlineCode",{parentName:"p"},"Duplicate DevMode"),":"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image",src:n(98932).Z})),(0,i.kt)("p",null,"Enter  ",(0,i.kt)("inlineCode",{parentName:"p"},"Duplicate DevMode")," and you will see the corresponding icon of the workload, indicating that the workload is in ",(0,i.kt)("inlineCode",{parentName:"p"},"Duplicate DevMode"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image",src:n(34110).Z})),(0,i.kt)("p",null,"Other operations in ",(0,i.kt)("inlineCode",{parentName:"p"},"Duplicate DevMode")," are the same as the default development mode."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Just like in the default development mode, if you need to access the service being developed through the local port, right-click  ",(0,i.kt)("inlineCode",{parentName:"p"},"Port Forward"),"  to use the port forwarding function of Nocalhost.")),(0,i.kt)("h3",{id:"faq"},"FAQ"),(0,i.kt)("h4",{id:""}),(0,i.kt)("h4",{id:"since-the-traffic-from-other-services-will-not-be-received-in-duplicate-mode--whats-the-difference-between-it-and-running-and-developing-the-program-locally"},"Since the traffic from other services will not be received in ",(0,i.kt)("inlineCode",{parentName:"h4"},"Duplicate Mode")," , what's the difference between it and running and developing the program locally?"),(0,i.kt)("p",null,"Running the program locally might need to import many environment variables. Especially if the workload needs other K8s resources in the cluster, such as (configmap / secrets), it will be more complicated to deal with."),(0,i.kt)("p",null,"Because the local programs is in a different network from the cluster, some specific configurations are required to access other services in the cluster (such as mysql, redis, etc.). Although the duplicate created by  ",(0,i.kt)("inlineCode",{parentName:"p"},"Duplicate Mode")," cannot be accessed by other services, it can directly access other services in the cluster."),(0,i.kt)("p",null,"In addition, developing the program in the container can maintain good consistency with the production environment."),(0,i.kt)("h4",{id:"is-there-a-limitation-on-the-number-of-duplicates"},"Is there a limitation on the number of duplicates?"),(0,i.kt)("p",null,"There is no limitation on the number of duplicates in Nocalhost. Theoretically, ",(0,i.kt)("inlineCode",{parentName:"p"},"Duplicate Mode"),"  can be run on any number of devices to create their own duplicates for development. However, it may be limited by cluster resources in real scenarios."))}p.isMDXComponent=!0},34110:function(e,t,n){t.Z=n.p+"assets/images/duplicate-devmode-status-3c4778b55a66e6dad2bb31b8770c2822.png"},48601:function(e,t,n){t.Z=n.p+"assets/images/duplicate-devmode-492a6c1b5e0eda3fbe63ecfad4d58046.jpg"},22724:function(e,t,n){t.Z=n.p+"assets/images/replace-devmode-1c42cdf49b3be92992c5ea0114e9dc9b.jpg"},98932:function(e,t,n){t.Z=n.p+"assets/images/start-duplicate-devmode-0e78b933f6d87682182b69e113a81e84.png"}}]);